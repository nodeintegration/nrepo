#!/usr/bin/env perl

use strict;
use warnings;

use Config::General;
use Getopt::Long;
use Log::Dispatch;
use Pod::Usage;

use App::Nrepo;

my $options = {
  'config-file' => 'conf/nrepo.conf',
};

GetOptions(
  $options,
  'action=s',
  'checksums',
  'config-file=s',
  'force',
  'init',
  'list',
  'log-level=s',
  'mirror',
  'repo=s',
  'tag=s',
  'src-tag=s',
  'symlink',
  'h|help',
);

pod2usage(-verbose=>2, -output => \*STDERR) if $options->{'h'} || $options->{'help'};
sub validate_options {
  my $options = shift;
  my $config  = shift;

  unless ($options->{'action'}) {
    print "ERROR: no action provided\n";
    pod2usage(-verbose=>2, -output => \*STDERR);
  }
  my $action = $options->{'action'};
  #XXX This is already covered in Nrepo.pm...move it
  #XXX But we need the cli to handle help, perhaps have it call the modules help method?
  my $valid_actions = {
    'list'         => {requires => []},
    'mirror'       => {requires => ['repo']},
    'clean'        => {requires => ['repo']},
    'tag'          => {requires => ['repo']},
    'init'         => {requires => ['repo']},
    'add-files'    => {requires => ['repo']},
    'remove-files' => {requires => ['repo']},
  };

  if (! $valid_actions->{$action}) {
    print "ERROR: no action: ${action} not valid\n";
    pod2usage(-verbose=>2,  -output => \*STDERR);
  }

  for my $require (@{$valid_actions->{$action}->{requires}}) {
    if (! $options->{$require}) {
      print "ERROR: option: ${require} missing for action: ${action}\n";
      pod2usage(-verbose=>2, -output => \*STDERR);
    }
  }

  # Check that the supplied repo is configured
  if ($options->{'repo'}) {
    unless ($config->{'repo'}->{$options->{'repo'}}) {
      print "ERROR: repo: $options->{'repo'} does not exist in configuration!\n";
      pod2usage(-verbose=>2, -output => \*STDERR);
    }
  }
}

my $conf_o = Config::General->new(
    -ConfigFile         => $options->{'config-file'},
    -UseApacheInclude   => 1,
    -IncludeDirectories => 1,
    -IncludeGlob        => 1,
    -IncludeRelative    => 1,
    -IncludeAgain       => 1,
    -AllowMultiOptions  => 1,
);
my $config = {$conf_o->getall};

validate_options($options, $config);

# Setup Default Config
$config->{tag_style}      ||= 'bottomdir';
$config->{log_file_level} ||= 'info';
$config->{screen_level}   ||= 'notice';
# We allow the cli to override the config for ScreenLevel
$config->{screen_level} = $options->{'log-level'} if $options->{'log-level'};

# Setup Logging
my $log_outputs = [
  [ 'Screen', 'min_level' => $config->{screen_level}, stderr => 0, newline => 1, ]
];
push @{$log_outputs}, [
  'File',
  'min_level' => $config->{log_file_level},
  'filename'  => $config->{log_file},
  'newline'   => 1,
  'mode'      => '>>',
] if $config->{log_file};
my $logger = Log::Dispatch->new(outputs => $log_outputs);
$logger->debug('logging initialized.');

my $a = App::Nrepo->new(config => $config, logger => $logger);
$a->go($options);

__END__

=head1 NAME

nrepo - Repository Management

=head1 SYNOPSIS

nrepo --action X [options]

 Actions:
   mirror         Mirror a configured repository (requires --repo, use \'all\' for all configured repositories)
   tag            Tag a repository (requires --repo)
   list           List all configured repositories
   init           Initialise a custom repository (requires --repo)
   add-files      Add files to a custom repository (requires --repo)
   remove-files   Remove files from a custom repository (requires --repo)

 Options:
   --repo           The name of the repo for your action
   --checksums      When mirroring a repository use checksums for downloaded packages rather than size
   --log-level      Change the stdout log level (overrides config)
   --help           This helpful message

=head1 Examples

  nrepo --action mirror --repo centos-6-epel
  nrepo --action tag --repo centos-6-epel --tag release_20150827
  nrepo --action tag --repo centos-6-epel --src-tag release_20150827 --symlink --tag production

  This will:
   1. update centos-6-epel to the current upstream version
   2. create a hardlink copy of head to release_20150827
   3. create a symlink of release_20150827 to production

